{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/Constants.js","webpack:///./src/js/Draw.js","webpack:///./src/js/Maps.js","webpack:///./src/js/Rounds.js","webpack:///./src/js/canvas.js","webpack:///./src/js/enemies/Enemy.js","webpack:///./src/js/towers/AbstractTower.js","webpack:///./src/js/towers/Fng.js","webpack:///./src/js/towers/Gunsmith.js","webpack:///./src/js/towers/Marksman.js","webpack:///./src/js/towers/Tower.js","webpack:///./src/js/utils.js"],"names":["canvas","document","querySelector","width","height","context","getContext","rect","getBoundingClientRect","mouse","x","y","addEventListener","event","clientX","left","clientY","pathElement","createElementNS","playBtn","getElementById","mapDropdown","placeFngBtn","placeMarksmanBtn","placeGunsmithBtn","upgradeBtn","cashLbl","healthLbl","TowerType","FNG","MARKSMAN","GUNSMITH","clear","clearRect","drawCircle","radius","color","beginPath","arc","Math","PI","fillStyle","fill","closePath","drawCircleBorder","lineWidth","strokeStyle","stroke","drawSquare","drawSquareBorder","drawEnemy","enemy","step","shape","camo","hasArmor","armorWidth","drawTower","tower","drawTowerRange","rangeRadius","drawTowerFull","drawPath","Path2D","getMap","drawTowers","towers","i","length","isSelected","drawTowersFull","drawAttack","towerX","towerY","enemyX","enemyY","moveTo","lineTo","sinMap","backwardsCMap","sMap","curMap","setMap","map","setAttributeNS","createEnemiesForRound","round","enemies","Enemy","getReward","cash","health","devMode","innerHTML","selectedTower","placing","running","checkAfford","run","setNewMap","placeTower","upgrade","getDistance","checkUpgrade","key","price","pop","playRound","moveEnemies","attack","endRound","requestAnimationFrame","parseInt","getPointAtLength","update","move","getTotalLength","damage","shift","alert","sort","a","b","numTargets","j","canHit","hit","alive","splice","towerType","Fng","Marksman","Gunsmith","place","options","selectedIndex","text","disabled","innerText","getUpgradeText","getUpgradePrice","rank","speedMultiplier","armorMultiplier","baseSpeed","speed","baseArmorHealth","armorHealth","baseArmorWidth","baseRadius","baseHealth","damageTaken","AbstractTower","armorPiercing","rank2Price","rank3Price","rank2Upgrade","rank3Upgrade","detectCamo","Tower","randomIntFromRange","min","max","floor","random","randomColor","colors","x1","y1","x2","y2","xDist","yDist","sqrt","pow"],"mappings":"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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/canvas.js\");\n","// Canvas + Context\nimport {Fng} from \"./towers/Fng\";\n\nexport const canvas = document.querySelector('canvas');\ncanvas.width = 800;\ncanvas.height = 800;\nexport const context = canvas.getContext('2d');\n\n// Mouse\nlet rect = canvas.getBoundingClientRect();\nexport const mouse = {\n    x: 0,\n    y: 0\n}\naddEventListener('mousemove', (event) => {\n    mouse.x = event.clientX - rect.left;\n    mouse.y = event.clientY\n})\n\n// Elements\nexport const pathElement = document.createElementNS('http://www.w3.org/2000/svg',\"path\");\nexport const playBtn = document.getElementById (\"playBtn\");\nexport const mapDropdown = document.getElementById (\"mapDropdown\");\nexport const placeFngBtn = document.getElementById (\"placeFngBtn\");\nexport const placeMarksmanBtn = document.getElementById (\"placeMarksmanBtn\");\nexport const placeGunsmithBtn = document.getElementById (\"placeGunsmithBtn\");\nexport const upgradeBtn = document.getElementById (\"upgradeBtn\");\nexport const cashLbl = document.getElementById('cashLbl');\nexport const healthLbl = document.getElementById('healthLbl');\n\nexport const TowerType = {\n    // FNGTOWER: 'Fng',\n    FNG: 'Fng',\n    MARKSMAN: 'Marksman',\n    GUNSMITH: 'Gunsmith'\n};\n","import {canvas, context} from \"./Constants\";\nimport {getMap} from \"./Maps\";\n\nexport function clear() {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n}\n\nexport function drawCircle(x, y, radius, color) {\n    context.beginPath();\n    if (radius > 0) {\n        context.arc(x, y, radius, 0, Math.PI * 2);\n    }\n    context.fillStyle = color;\n    context.fill();\n    context.closePath();\n}\n\nexport function drawCircleBorder(x, y, radius, color, width) {\n    context.beginPath();\n    if (radius > 0) {\n        context.arc(x, y, radius, 0, Math.PI * 2);\n    }\n    context.lineWidth = width;\n    context.strokeStyle = color;\n    context.stroke();\n    context.closePath();\n}\n\nexport function drawSquare(x, y, radius, color) {\n    context.beginPath();\n    context.fillStyle = color;\n    if (radius > 0) {\n        context.rect(x - radius, y - radius, radius * 2, radius * 2);\n    }\n    context.fill();\n    context.closePath();\n}\n\nexport function drawSquareBorder(x, y, radius, color, width) {\n    context.beginPath();\n    if (radius > 0) {\n        context.rect(x - radius, y - radius, radius * 2, radius * 2);\n    }\n    context.lineWidth = width;\n    context.strokeStyle = color;\n    context.stroke();\n    context.closePath();\n}\n\nexport function drawEnemy(enemy) {\n    if (enemy.step >= 0) {\n        if (enemy.shape === 'circle') {\n            drawCircle(enemy.x, enemy.y, enemy.radius, enemy.color);\n            if (enemy.camo) {\n                drawCircleBorder(enemy.x, enemy.y, enemy.radius + 10, \"lightgreen\", 2);\n            }\n            if (enemy.hasArmor) {\n                drawCircleBorder(enemy.x, enemy.y, enemy.radius, 'black', enemy.armorWidth);\n            }\n        } else if (enemy.shape === 'square') {\n            drawSquare(enemy.x, enemy.y, enemy.radius, enemy.color);\n            if (enemy.camo) {\n                drawSquareBorder(enemy.x, enemy.y, enemy.radius + 10, \"lightgreen\", 2);\n            }\n            if (enemy.hasArmor) {\n                drawSquareBorder(enemy.x, enemy.y, enemy.radius, 'black', enemy.armorWidth);\n            }\n        }\n    }\n}\n\nexport function drawTower(tower) {\n    context.beginPath()\n    context.arc(tower.x, tower.y, tower.radius, 0, Math.PI * 2, false)\n    context.fillStyle = tower.color;\n    context.fill()\n    context.closePath()\n\n}\n\nexport function drawTowerRange(tower) {\n    context.beginPath()\n    context.arc(tower.x, tower.y, tower.rangeRadius, 0, Math.PI * 2, false)\n    context.fillStyle = '#d3d3d3';\n    context.fill()\n    context.closePath()\n}\n\nexport function drawTowerFull(tower) {\n    drawTowerRange(tower);\n    drawTower(tower);\n}\n\nexport function drawPath() {\n    context.beginPath();\n    context.strokeStyle = '#000';\n    context.lineWidth = 1;\n    context.stroke(new Path2D(getMap()));\n    context.closePath();\n}\n\nexport function drawTowers(towers) {\n    for (let i = 0; i < towers.length; i++) {\n        if (towers[i].isSelected) {\n            towers[i].drawTowerRange();\n        }\n    }\n    for (let i = 0; i < towers.length; i++) {\n        towers[i].drawTower();\n    }\n}\n\nexport function drawTowersFull(towers) {\n    for (let i = 0; i < towers.length; i++) {\n        towers[i].drawTowerRange();\n    }\n    for (let i = 0; i < towers.length; i++) {\n        towers[i].drawTower();\n    }\n}\n\nexport function drawAttack(towerX, towerY, enemyX, enemyY) {\n    context.beginPath();\n    context.strokeStyle = '#000';\n    context.lineWidth = 1;\n    context.moveTo(towerX, towerY);\n    context.lineTo(enemyX, enemyY);\n    context.stroke();\n    context.closePath();\n}\n","import { pathElement } from \"./Constants\";\n\nconst sinMap = 'm-2.5,590.45313c0,0 0,0 2,0c2,0 3.07612,-0.61731 4,-1c1.30656,-0.5412 2,-1 3,-1c1,0 3,-1 3,-1c1,0 1.69344,-0.4588 3,-1c1.84776,-0.76538 2.69344,-0.4588 4,-1c0.92388,-0.38269 2,-1 3,-1c2,0 3.07612,-0.61731 4,-1c1.30656,-0.5412 2.85273,-1.1731 4,-2c1.81399,-1.30743 3.02675,-1.77026 4,-2c2.17625,-0.51373 2,-2 3,-3c1,-1 1.61732,-2.07611 2,-3c0.54119,-1.30658 2,-1 3,-2c1,-1 2,-3 3,-4c1,-1 1.45881,-1.69342 2,-3c0.38268,-0.92389 1,-3 2,-5c1,-2 2.22421,-4.90283 3,-7c1.4305,-3.867 4.75531,-10.13202 7,-14c1.80972,-3.11847 4.4159,-5.76111 6,-9c1.38935,-2.8407 2.33749,-5.31 4,-8c1.48699,-2.40601 3.14429,-4.93414 4,-7c1.21015,-2.92157 2.11587,-5.96384 3,-9c1.15277,-3.95868 3.11587,-6.96384 4,-10c1.15277,-3.95868 2.14773,-7.94342 4,-13c1.08769,-2.96933 2.54863,-6.76993 4,-11c1.65482,-4.82303 3.95399,-13.01331 6,-20c2.93415,-10.01953 5.28472,-14.92484 7,-22c1.20139,-4.95547 3.8484,-11.0451 6,-18c1.86919,-6.04202 3,-13 5,-18c2,-5 3.88929,-12.03806 6,-18c2.85142,-8.05417 8,-27 11,-36c5,-15 9.78102,-27.70364 14,-40c3.70029,-10.78461 5.98534,-18.52814 8,-24c2.10167,-5.70816 2.5695,-9.133 4,-13c1.55159,-4.19434 4.64886,-10.19577 7,-14c2.62866,-4.25325 4.72398,-8.22273 8,-12c2.77979,-3.20512 7.82285,-7.18536 12,-11c5.76726,-5.26675 13.74184,-11.32718 20,-16c8.66713,-6.47154 20.0947,-14.87578 28,-21c5.06187,-3.92142 9.40401,-7.41156 14,-11c3.34407,-2.61098 6.06601,-4.87766 8,-6c3.11848,-1.80972 5,-2 7,-2c2,0 4,0 7,0c3,0 5,0 8,0c2,0 5.01498,-0.24437 7,0c4.09222,0.50377 6.03873,1.51945 9,2c3.12143,0.50655 5.87857,1.49345 9,2c2.96127,0.48055 9.17163,0.84087 13,2c3.45084,1.04483 6.31,1.33749 9,3c2.40601,1.487 4,3 6,4c2,1 5.06601,1.87766 7,3c3.11847,1.80972 4,3 6,5c2,2 5,4 7,6c3,3 4.70547,5.34619 7,7c1.814,1.30745 4,3 6,5c2,2 4.61383,2.297 7,5c1.47983,1.67633 3.1731,3.85274 4,5c1.30746,1.814 2.53491,2.31076 4,4c2.07193,2.38896 2.34619,3.70546 4,6c1.30746,1.814 1.71411,4.21167 4,7c1.79318,2.18735 4,4 5,5c2,2 3,4 5,6c2,2 3.34619,2.70546 5,5c1.30746,1.814 2,3 4,6c2,3 4.14429,4.93414 5,7c1.21014,2.92157 2.41589,4.76108 4,8c1.38934,2.84073 2,6 3,9c1,3 2.91232,6.03067 4,9c1.85226,5.05658 1.84085,9.17163 3,13c1.04483,3.45084 3.11588,5.96384 4,9c1.15277,3.95868 1.95517,6.54916 3,10c0.86935,2.87128 0.31073,5.08026 1,8c0.51373,2.17624 2.48627,5.82376 3,8c0.4595,1.9465 0.67963,4.02582 1,6c0.50653,3.12143 1.49347,5.87857 2,9c0.32037,1.97418 1.31073,5.08026 2,8c1.0275,4.35251 2.73145,10.0769 4,14c1.65686,5.12396 3.73145,8.0769 5,12c1.65686,5.12396 3.54861,8.76993 5,13c1.65482,4.82303 2.28857,8.86829 4,13c1.21014,2.92157 1.98163,6.71201 3,12c0.75644,3.92783 0.84723,7.04132 2,11c0.88412,3.03616 0.84723,7.04132 2,11c0.88412,3.03616 1.56952,7.133 3,11c1.55161,4.19434 2.67862,8.12704 4,11c2.43649,5.29749 3.61066,7.15927 5,10c1.58411,3.23892 3.41589,5.76108 5,9c1.38934,2.84073 2.41589,5.76108 4,9c1.38934,2.84073 2,5 3,8c1,3 3,6 4,9c1,3 2.41589,4.76111 4,8c1.38934,2.8407 2.78986,6.07843 4,9c1.71143,4.13171 4.19028,6.88153 6,10c2.24469,3.86798 2.724,7.22272 6,11c1.85318,2.13672 2.81265,4.20679 5,6c2.78833,2.28589 4,3 6,4c2,1 1.82373,2.48627 4,3c0.97327,0.22974 2,0 4,0c2,0 4,0 7,0c2,0 6,1 10,2c4,1 8,1 12,2c4,1 6.87854,1.49347 10,2c1.97418,0.32037 3,0 5,0c1,0 3,0 4,0c1,0 2,0 4,0c1,0 1.90631,-1.10339 3,-2c2.78833,-2.28589 3,-3 5,-4c2,-1 4,-3 6,-4c2,-1 3.88153,-3.19031 7,-5c1.93402,-1.12231 5.06598,-2.87769 7,-4c3.11847,-1.80969 5.88153,-4.19031 9,-6c1.93402,-1.12231 5,-3 9,-5c4,-2 8.13202,-3.75531 12,-6c3.11847,-1.80969 6,-3 8,-4c2,-1 4.88153,-3.19031 8,-5c1.93402,-1.12231 4.34619,-2.70544 6,-5c1.30743,-1.81396 4.08051,-4.93176 10,-12c9.12537,-10.89624 21.6723,-25.26816 34,-40c6.82196,-8.15234 15.35577,-16.76016 22,-27c3.17389,-4.89148 5.56952,-9.133 7,-13c1.55157,-4.19434 3.84723,-8.04132 5,-12c0.88416,-3.03616 2.09546,-6.97736 3,-11c1.11865,-4.97479 2.69073,-9.7764 4,-15c2.20154,-8.78369 2.49872,-14.94672 3,-22c0.42535,-5.98489 0.56506,-16.01352 1,-23c0.50098,-8.04669 0.61292,-14.01071 1,-21c0.50079,-9.04153 0.362,-19.02264 1,-28c0.50128,-7.05328 1,-13 1,-19c0,-3 -1.14807,-6.22836 0,-9c0.5412,-1.30655 0.54047,-3.0535 1,-5c0.51373,-2.17624 0.23462,-3.15225 1,-5c0.5412,-1.30655 0.33746,-2.31 2,-5c0.74347,-1.203 2.1731,-2.85274 3,-4c1.30743,-1.814 2.1731,-3.85274 3,-5c1.30743,-1.814 2.4588,-3.69344 3,-5c0.76538,-1.84776 1,-3 3,-5c2,-2 3.18604,-2.69255 5,-4c1.14728,-0.8269 3,-1 4,-2c1,-1 1.47424,-1.14935 2,-2c1.1756,-1.90211 3,-2 3,-2c1,-1 2.07611,-2.61731 3,-3c1.30658,-0.5412 2.8244,-1.09789 4,-3c0.52576,-0.85065 2.07611,-1.61731 3,-2c1.30658,-0.5412 2,-1 3,-2c1,-1 3,-2 4,-3c1,-1 1.69342,-1.4588 3,-2c0.92389,-0.38269 2,0 3,0c1,0 2,0 3,0c0,0 1,0 2,0c1,0 1,0 1,0c1,0 1,0 1,0c1,0 1,-1 1,-1l0,0l0,0l0,-1';\nconst backwardsCMap = 'm-0.5,54.45313c0,0 1,0 3,0c1,0 3,0 7,0c2,0 5,0 9,0c3,0 5,0 8,0c3,0 6,0 9,0c4,0 8,0 11,0c2,0 6,0 8,0c1,0 3,0 5,0c2,0 4,-1 7,-1c4,0 7,0 10,0c4,0 8,0 11,0c3,0 6,0 9,0c2,0 4,0 6,0c2,0 4,0 6,0c2,0 4,0 7,0c2,0 4,0 6,0c4,0 7,0 9,0c3,0 6,0 9,0c2,0 6,0 8,0c2,0 4,0 6,0c3,0 6,0 9,0c3,0 6,0 9,0c3,0 6,0 11,0c3,0 5.82375,0.48626 8,1c2.91975,0.68926 4.87856,0.49346 8,1c1.97418,0.32037 5.03874,0.51945 8,1c3.12144,0.50654 6,1 10,1c7,0 12,0 17,0c7,0 13,0 20,0c6,0 12,0 16,0c5,0 9,0 13,0c6,0 10,0 14,0c4,0 7,0 10,0c2,0 4,0 6,0c2,0 5,0 7,0c4,0 5,0 9,0c4,0 7,0 10,0c3,0 7,0 10,0c3,0 5,0 8,0c2,0 4,0 9,0c3,0 7,0 10,0c4,0 7,0 10,0c4,0 7,0 10,0c3,0 6,0 11,0c2,0 4,0 6,0c2,0 5,0 8,0c3,0 6,0 8,0c3,0 5,0 7,0c4,0 6.0535,0.54049 8,1c2.17624,0.51374 3.15225,1.23463 5,2c1.30655,0.54119 2.82376,1.48626 5,2c0.97324,0.22975 2.0535,0.54049 4,1c2.17624,0.51374 4.0535,0.54049 6,1c2.17624,0.51374 3.82376,1.48626 6,2c1.9465,0.4595 4.82376,0.48626 7,1c2.91974,0.68926 5,0 6,1c1,1 3.69345,1.4588 5,2c1.84775,0.76537 2.69345,1.4588 4,2c0.92389,0.38268 2,1 3,2c1,1 1.61731,2.07612 2,3c0.5412,1.30656 1.69254,2.186 3,4c0.8269,1.14727 1.5405,2.0535 2,4c0.51373,2.17625 0.5405,3.0535 1,5c0.51373,2.17625 1,4 1,6c0,2 1,4 1,7c0,2 0,4 0,6c0,3 0,4 0,5c0,3 0,4 0,5c0,2 -0.22977,4.02675 0,5c0.51373,2.17625 1,4 1,6c0,1 0,3 0,5c0,2 0,3 0,5c0,2 0,4 0,5c0,2 0.4595,5.0535 0,7c-0.51373,2.17625 -0.5405,3.0535 -1,5c-0.51373,2.17625 -1.5405,3.0535 -2,5c-0.51373,2.17625 -2,3 -2,5c0,2 -1.5405,4.0535 -2,6c-0.51373,2.17625 -1.77023,4.02675 -2,5c-0.51373,2.17625 -0.69254,5.186 -2,7c-0.8269,1.14726 -1.69254,3.186 -3,5c-0.8269,1.14726 -2.1731,1.85274 -3,3c-1.30746,1.814 -2,3 -2,3c-1,1 -2.4588,1.69344 -3,3c-0.38269,0.92387 -1,1 -3,2c0,0 -3,1 -5,2c-4,2 -6.0535,2.5405 -8,3c-2.17624,0.51375 -3.93414,1.14429 -6,2c-2.92157,1.21014 -5.82376,1.48625 -8,2c-3.89301,0.91901 -6.87857,0.49345 -10,1c-7.8967,1.28146 -13,0 -19,0c-4,0 -7,0 -10,0c-3,0 -6,0 -8,0c-3,0 -5,0 -7,0c-3,0 -7,0 -11,0c-4,0 -8,0 -12,0c-4,0 -9,0 -13,0c-5,0 -9,0 -13,0c-5,0 -10,0 -18,0c-7,0 -13,0 -20,0c-6,0 -10,0 -15,0c-6,0 -11,0 -16,0c-5,0 -11,0 -18,0c-4,0 -10,0 -17,0c-6,0 -12.9258,0.49756 -18,1c-3.98053,0.39415 -8,1 -12,1c-4,0 -8,0 -14,0c-6,0 -15,0 -19,0c-5,0 -11,0 -17,0c-5,0 -10,0 -15,0c-4,0 -10,0 -14,0c-5,0 -12,0 -16,0c-4,0 -8,0 -12,0c-4,0 -7,0 -11,0c-4,0 -7,0 -11,0c-4,0 -8,0 -12,0c-3,0 -7,0 -11,0c-3,0 -6,0 -8,0c-2,0 -5,0 -8,0c-3,0 -6,0 -9,0c-4,0 -7,0 -9,0c-4,0 -7,0 -9,0c-2,0 -4.02675,-0.22975 -5,0c-2.17625,0.51375 -4,1 -5,1c-1,0 -3,0 -4,0c-2,0 -3,0 -3,0c-1,0 -1,0 -1,0c-1,0 -1,0 -1,0c0,0 -1,0 -1,0c0,0 -1,0 -2,0c0,0 0,0 -1,0c0,0 0,0 0,0c-1,0 -2,0 -2,0l0,0l-1,0l0,0';\nconst sMap = 'm468.36093,-0.54688c0,0 0,2.38469 0,4.76938c0,0 0,2.38469 0,4.76938c0,2.38469 0,4.76938 0,7.15407c0,0 0,2.38469 0,2.38469c0,2.38469 0,4.76938 0,4.76938c0,2.38469 -2.21966,3.08315 0,4.76938c2.21966,1.68623 3.13907,2.38469 3.13907,2.38469c0,2.38469 0,2.38469 0,4.76938c0,0 0,2.38469 0,4.76938c0,0 0,2.38469 0,2.38469c0,2.38469 0,2.38469 0,4.76938c0,0 0,0 0,2.38469c0,0 0,0 0,2.38469c0,0 0,2.38469 0,2.38469c0,0 0,2.38469 0,2.38469c-3.13907,0 -3.13907,2.38469 -3.13907,2.38469c0,0 0,2.38469 0,2.38469c0,0 -3.13907,0 -3.13907,2.38469c0,0 -0.91941,0.69846 -3.13907,2.38469c-2.21966,1.68623 0,2.38469 -3.13907,4.76938c0,0 -0.91941,0.69846 -3.13907,2.38469c-2.21966,1.68623 0,2.38469 0,2.38469c-3.13907,2.38469 -0.91941,3.08315 -3.13907,4.76938c-2.21966,1.68623 -0.91941,0.69846 -3.13907,2.38469c-2.21966,1.68623 -3.13907,2.38469 -6.27815,2.38469c0,0 -3.13907,0 -3.13907,0c-3.13907,2.38469 -6.51711,1.47211 -9.41722,2.38469c-4.1014,1.29058 -6.51711,1.47211 -9.41722,2.38469c-4.1014,1.29058 -3.61696,0.55953 -9.41722,2.38469c-4.1014,1.29058 -6.27815,2.38469 -9.41722,2.38469c-3.13907,0 -3.61698,-1.82516 -9.41722,0c-4.1014,1.29058 -12.55629,2.38469 -12.55629,2.38469c-9.41722,0 -16.17327,-1.82516 -21.97351,0c-4.1014,1.29058 -9.41722,2.38469 -12.55629,2.38469c-6.27815,0 -9.41722,0 -12.55629,0c-3.13907,0 -3.37801,-0.91258 -6.27815,0c-4.1014,1.29058 -6.27815,2.38469 -6.27815,2.38469c-3.13907,0 -6.27815,0 -9.41722,0c-3.13907,0 -6.27815,2.38469 -9.41722,2.38469c-6.27815,0 -6.27815,0 -12.55629,0c-6.27815,0 -15.14209,1.15957 -21.97351,2.38469c-6.11019,1.09578 -12.55629,0 -18.83444,0c-6.27815,0 -12.55629,2.38469 -18.83444,2.38469c-3.13907,0 -6.27815,0 -9.41722,0c-6.27815,0 -8.86394,1.15957 -15.69536,2.38469c-3.05509,0.54789 -3.37803,-0.91258 -6.27815,0c-4.1014,1.29058 -6.27815,2.38469 -9.41722,2.38469c0,0 -3.13907,2.38469 -3.13907,2.38469c-3.13907,0 -4.05848,0.69846 -6.27815,2.38469c-2.21966,1.68623 -3.37803,1.47211 -6.27815,2.38469c-4.1014,1.29058 -3.13907,2.38469 -6.27815,4.76938c0,0 -4.05848,-1.68623 -6.27815,0c-2.21966,1.68623 -0.91941,3.08315 -3.13907,4.76938c-2.21966,1.68623 -4.05848,0.69846 -6.27815,2.38469c-2.21966,1.68623 -3.13907,2.38469 -3.13907,2.38469c-3.13907,2.38469 -3.13907,2.38469 -6.27815,4.76938c0,0 2.21966,0.69846 0,2.38469c-2.21966,1.68623 -3.13907,2.38469 -3.13907,4.76938c0,0 0,2.38469 0,2.38469c0,2.38469 0,4.76938 0,4.76938c0,2.38469 0,2.38469 0,4.76938c0,2.38469 0,2.38469 0,4.76938c0,0 0,2.38469 0,2.38469c0,2.38469 3.13907,4.76938 3.13907,4.76938c3.13907,2.38469 4.5793,1.65363 6.27815,4.76938c1.20127,2.20317 0.91941,3.08315 3.13907,4.76938c2.21966,1.68623 6.27815,2.38469 6.27815,2.38469c0,2.38469 3.13907,2.38469 3.13907,4.76938c0,0 3.13907,2.38469 3.13907,2.38469c3.13907,0 3.13907,2.38469 6.27815,2.38469c3.13907,0 3.13907,2.38469 6.27815,2.38469c0,0 0.91941,0.69846 3.13907,2.38469c2.21966,1.68623 3.37803,1.47211 6.27815,2.38469c4.1014,1.29059 6.27815,2.38469 6.27815,2.38469c3.13907,2.38469 6.27815,2.38469 9.41722,4.76938c0,0 3.13907,2.38469 6.27815,2.38469c0,0 0,2.38469 3.13907,2.38469c3.13907,0 7.19756,0.69846 9.41722,2.38469c2.21966,1.68623 3.37801,1.47211 6.27815,2.38469c4.1014,1.29059 5.31582,3.47879 9.41722,4.76938c2.90013,0.91258 6.27815,0 6.27815,0c3.13907,0 6.27815,2.38469 9.41722,2.38469c0,0 4.05848,0.69846 6.27815,2.38469c2.21966,1.68623 7.19756,-1.68623 9.41722,0c2.21966,1.68623 3.13907,2.38469 6.27815,2.38469c3.13907,0 2.17675,1.0941 6.27815,2.38469c2.90013,0.91258 3.13907,0 6.27815,0c3.13907,0 3.13907,0 6.27815,0c3.13907,0 3.13907,0 6.27815,0c0,0 3.13907,0 6.27815,0c3.13907,0 2.17675,1.0941 6.27815,2.38469c2.90013,0.91258 9.41722,0 12.55629,0c6.27815,0 6.27815,0 12.55629,0c6.27815,0 8.45489,1.0941 12.55629,2.38469c2.90013,0.91258 6.27815,0 12.55629,0c3.13907,0 6.75605,-1.82516 12.55629,0c4.1014,1.29059 6.27815,2.38469 9.41722,2.38469c3.13907,0 6.27815,2.38469 6.27815,2.38469c3.13907,0 7.19756,0.69846 9.41722,2.38469c2.21966,1.68623 5.31582,3.47879 9.41722,4.76938c2.90011,0.91258 5.07685,2.56621 6.27815,4.76938c1.69886,3.11575 3.13907,2.38469 6.27815,4.76938c3.13907,2.38469 3.37804,3.8568 6.27815,4.76938c4.1014,1.29059 3.13907,4.76938 3.13907,7.15407c0,2.38469 3.13907,4.76938 3.13907,4.76938c0,2.38469 0,4.76938 0,7.15407c0,0 0,2.38469 0,4.76938c0,2.38469 0,2.38469 0,4.76938c0,4.76938 0,4.76938 0,9.53876c0,4.76938 0,4.76938 0,9.53876c0,0 0,2.38469 0,7.15407c0,0 2.21966,3.08315 0,4.76938c-2.21966,1.68623 -0.91941,3.08315 -3.13907,4.76938c-2.21966,1.68623 -4.05848,0.69846 -6.27815,2.38469c-2.21966,1.68623 -6.27815,0 -9.41722,2.38469c0,0 -5.31582,1.0941 -9.41722,2.38469c-2.90013,0.9126 -5.31582,1.0941 -9.41722,2.38469c-2.90013,0.9126 -9.41722,2.38469 -12.55629,2.38469c-6.27815,0 -13.14017,-0.73317 -18.83444,2.38469c-3.60136,1.97191 -10.0011,1.65152 -15.69536,4.76938c-3.60136,1.97191 -8.86394,5.92894 -15.69536,7.15407c-3.05511,0.54789 -6.27815,2.38469 -9.41722,4.76938c0,0 -6.27815,2.38469 -9.41722,4.76938c0,0 -5.81585,0.41278 -9.41722,2.38469c-5.69426,3.11786 -11.59396,3.47879 -15.69536,4.76938c-5.80024,1.82516 -12.78168,1.64839 -28.25166,4.76938c-9.59408,1.93556 -22.02656,4.53901 -40.80795,7.15407c-15.74393,2.19213 -27.96219,5.95274 -40.80795,7.15407c-12.46222,1.16549 -24.73136,3.56143 -34.5298,4.76938c-9.29562,1.14595 -18.28117,1.15956 -25.11258,2.38469c-3.05509,0.54789 -9.41722,0 -12.55629,0c-3.13907,0 -6.27815,0 -12.55629,0c-3.13907,0 -6.27815,0 -9.41722,0c0,0 -3.13907,0 -6.27815,0c-3.13907,0 -6.27815,0 -6.27815,0c-3.13907,0 -6.27815,0 -9.41722,0c0,0 -6.27815,0 -9.41722,0c0,0 -3.13907,0 -6.27815,0c-3.13907,0 -9.41722,0 -9.41722,0c-3.13907,0 -9.41722,0 -9.41722,0c-3.13907,0 -3.13907,0 -3.13907,0c-3.13907,0 -3.13907,0 -6.27815,0c0,0 0,0 -3.13907,0c0,0 0,0 0,0c-3.13907,0 -3.13907,0 -3.13907,0c-3.13907,0 -3.13907,0 -3.13907,0c0,0 -3.13907,0 -3.13907,0c0,0 -3.13907,0 -3.13907,0c0,0 0,0 -3.13907,0l0,0l0,0l-3.13907,0';\n\nlet curMap;\nexport function setMap(map) {\n    switch (map) {\n        case 'backwardsCMap':\n            curMap = backwardsCMap;\n            break;\n        case 'sMap':\n            curMap = sMap;\n            break;\n        case 'sinMap':\n            curMap = sinMap;\n            break;\n        default:\n            curMap = sinMap;\n    }\n    pathElement.setAttributeNS(null, 'd', curMap);\n}\n\nexport function getMap() {\n    return curMap;\n}\n","import Enemy from \"./enemies/Enemy\";\n\nexport function createEnemiesForRound(round) {\n    let enemies = [];\n    switch (round) {\n        case 1:\n            // Start red circle immediately at default speed with armor and camo\n            // enemies[0] = new Enemy('circle', 'red', 0, 1, 1, true);\n            // Start yellow square with delay at default speed without camo or armor\n            // enemies[1] = new Enemy('square', 'yellow', -150, 1, 0, false);\n            // Start yellow square with delay at 2x speed with armor and camo\n            // enemies[2] = new Enemy('square', 'yellow', -300, 2, 2, true);\n            for (let i = 0; i < 5; i++) {\n                enemies[i] = new Enemy('circle', 'red', i * -75, 1, 0, false);\n            }\n            break;\n        default:\n            break;\n    }\n    return enemies;\n}\n\nexport function getReward(round) {\n    return 50;\n}\n\n","import Tower from './towers/Tower';\nimport {\n    canvas,\n    mouse,\n    pathElement,\n    cashLbl,\n    healthLbl,\n    playBtn,\n    mapDropdown,\n    placeFngBtn,\n    placeMarksmanBtn,\n    placeGunsmithBtn,\n    upgradeBtn,\n    TowerType\n} from './Constants';\nimport { getDistance } from './utils';\nimport { createEnemiesForRound, getReward } from './Rounds';\nimport { setMap } from \"./Maps\";\nimport { clear, drawPath, drawTowers, drawTowersFull, drawAttack } from \"./Draw\";\nimport {Fng} from \"./towers/Fng\";\nimport {Marksman} from \"./towers/Marksman\";\nimport {Gunsmith} from \"./towers/Gunsmith\";\n\n// Game Vars\nlet round = 1;\nlet cash = 150;\nlet health = 100;\nlet devMode = true;\nif (devMode) {\n    cash = 1000000;\n    cashLbl.innerHTML = \"$\" + cash;\n    health = 100000;\n    healthLbl.innerHTML = \"Health: \" + health;\n}\nlet selectedTower;\nlet towers = [];\nlet enemies = [];\nlet placing = false;\nlet running = false;\n\n/*\nInit\n */\nsetMap('');\ncheckAfford(cash);\ndrawPath();\nplayBtn.addEventListener (\"click\", run, false);\nmapDropdown.addEventListener (\"change\", function() { setNewMap() }, false);\nplaceFngBtn.addEventListener (\"click\", function() { placeTower(TowerType.FNG) }, false);\nplaceMarksmanBtn.addEventListener (\"click\", function() { placeTower(TowerType.MARKSMAN) }, false);\nplaceGunsmithBtn.addEventListener (\"click\", function() { placeTower(TowerType.GUNSMITH) }, false);\nupgradeBtn.addEventListener (\"click\", function() { upgrade() }, false);\ncanvas.addEventListener('click', function() {\n    if (placing) {\n        placing = false;\n    } else {\n        for (let i = 0; i < towers.length; i++) {\n            if (getDistance(mouse.x, mouse.y, towers[i].x, towers[i].y) < towers[i].radius) {\n                towers[i].isSelected = true;\n                selectedTower = towers[i];\n                checkUpgrade();\n            } else {\n                towers[i].isSelected = false;\n            }\n            clear();\n            drawTowers(towers);\n            drawPath();\n        }\n\n    }}, false);\ndocument.addEventListener('keydown', function(event) {\n    if (event.key === 'Escape' && placing) {\n        placing = false;\n        cash += towers[towers.length - 1].price;\n        towers.pop();\n        drawTowers(towers);\n        drawPath();\n    }\n}, false);\n\n/*\nPlay round\n */\nfunction run() {\n    running = true;\n    enemies = createEnemiesForRound(round);\n    playRound();\n}\nfunction playRound() {\n    clear();\n    drawTowers(towers);\n    drawPath();\n    moveEnemies();\n    attack();\n    if (enemies.length === 0) {\n        endRound();\n    } else {\n        requestAnimationFrame(playRound)\n    }\n}\nfunction moveEnemies() {\n    for (let i = 0; i < enemies.length; i++) {\n        let x = parseInt(pathElement.getPointAtLength(enemies[i].step).x);\n        let y = parseInt(pathElement.getPointAtLength(enemies[i].step).y);\n        enemies[i].update(x, y);\n        enemies[i].move();\n\n        // Check if enemy reached the end of the map\n        if (enemies[i].step >= pathElement.getTotalLength()) {\n            health -= enemies[i].damage;\n            enemies.shift();\n            healthLbl.innerHTML = \"Health: \" + health;\n            if (health <= 0) {\n                alert('Game Over');\n            }\n        }\n\n        // Sort enemies in descending order by how far along they are on the map\n        enemies.sort((a, b) => (b.step - a.step));\n    }\n}\nfunction attack() {\n    for (let i = 0; i < towers.length; i++) {\n        let numTargets = towers[i].numTargets;\n        for (let j = 0; j < enemies.length; j++) {\n            if (towers[i].canHit(enemies[j])) {\n            // if (getDistance(towers[i].x, towers[i].y, enemies[j].x, enemies[j].y) < towers[i].rangeRadius &&\n            //     towers[i].canHit(enemies[j])) {\n                // enemies[i].step >= 0 &&\n                // (!enemies[i].camo || (enemies[i].camo && towers[i].detectCamo))) {\n                drawAttack(towers[i].x, towers[i].y, enemies[j].x, enemies[j].y);\n                // enemies[j].hit(towers[i].damage);\n                towers[i].hit(enemies[i]);\n                numTargets--;\n                if (!enemies[j].alive) {\n                    cash += enemies[j].damage;\n                    cashLbl.innerHTML = \"$\" + cash;\n                    enemies.splice(j, 1);\n                }\n                if (numTargets === 0) {\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction endRound() {\n    running = false;\n    cash += getReward(round);\n    cashLbl.innerHTML = \"$\" + cash;\n    checkAfford();\n    round++;\n    playBtn.innerHTML = \"Play Round \" + round;\n    clear();\n    drawTowers(towers);\n    drawPath();\n}\n\n/*\nDrag and drop tower\n */\nfunction placeTower(towerType) {\n    placing = true;\n    let tower;\n    switch (towerType) {\n        case TowerType.FNG:\n            // towers[towers.length] = new Fng(mouse.x, mouse.y);\n            tower = new Fng(mouse.x, mouse.y);\n            break;\n        case TowerType.MARKSMAN:\n            tower = new Marksman(mouse.x, mouse.y);\n            break;\n        case TowerType.GUNSMITH:\n            tower = new Gunsmith(mouse.x, mouse.y);\n    }\n    towers[towers.length] = tower;\n    cash -= towers[towers.length - 1].price;\n    cashLbl.innerHTML = \"$\" + cash;\n    checkAfford(cash);\n    place();\n}\nfunction place() {\n    clear();\n    let tower = towers[towers.length - 1];\n    if (placing) {\n        requestAnimationFrame(place);\n        tower.update(mouse.x, mouse.y);\n        drawTowersFull(towers);\n    } else {\n        for (let i = 0; i < towers.length - 1; i++) {\n            if (getDistance(tower.x, tower.y, towers[i].x, towers[i].y) < tower.radius + towers[i].radius) {\n                placing = true;\n                requestAnimationFrame(place);\n            }\n        }\n        drawTowers(towers);\n    }\n    drawPath();\n}\n\nfunction setNewMap() {\n    setMap(mapDropdown.options[mapDropdown.selectedIndex].text);\n    clear();\n    drawPath();\n}\n\nfunction checkAfford() {\n    placeFngBtn.disabled = cash < 100;\n    placeMarksmanBtn.disabled = cash < 100;\n    placeGunsmithBtn.disabled = cash < 150;\n}\n\nfunction upgrade() {\n    selectedTower.upgrade();\n    checkUpgrade();\n}\n\nfunction checkUpgrade() {\n    upgradeBtn.innerText = selectedTower.getUpgradeText() + ' ($' + selectedTower.getUpgradePrice() + ')';\n    upgradeBtn.disabled = selectedTower.rank >= 3 || cash <= selectedTower.getUpgradePrice();\n}\n\n","import {drawEnemy} from \"../Draw\";\n\n// Shape is health, color is base speed\nexport default class Enemy {\n    constructor(shape, color, step, speedMultiplier, armorMultiplier, camo) {\n        this.shape = shape;\n        this.step = step;\n        this.baseSpeed = 0;\n        this.speed = 1;\n        this.speedMultiplier = speedMultiplier;\n        this.baseArmorHealth = 5;\n        this.armorHealth = this.baseArmorHealth * armorMultiplier;\n        this.baseArmorWidth = 2;\n        this.armorWidth = this.armorHealth / 5 * this.baseArmorWidth;\n        this.hasArmor = armorMultiplier > 0;\n        this.x = 0;\n        this.y = 0;\n        this.alive = true;\n        this.damage = 10;\n        this.camo = camo;\n        this.baseRadius = 20;\n        this.radius = 20;\n        switch (shape) {\n            case \"circle\":\n                this.baseHealth = 20;\n                this.baseSpeed = 3;\n                break;\n            case \"square\":\n                this.baseHealth = 60;\n                this.baseSpeed = 1\n                break;\n            default:\n                this.baseHealth = 0;\n                break;\n        }\n        this.health = this.baseHealth;\n        switch (color) {\n            case \"red\":\n                this.color = 'red';\n                this.speed = this.baseSpeed * this.speedMultiplier;\n                break;\n            case \"yellow\":\n                this.color = 'yellow';\n                this.speed = this.baseSpeed * this.speedMultiplier;\n                break;\n            default:\n                this.color = 'black';\n                this.radius = 0;\n                this.rangeRadius = 0;\n                this.color = '#000';\n        }\n    }\n\n    move() {\n        drawEnemy(this);\n    }\n\n    update(x, y) {\n        this.x = x;\n        this.y = y;\n        this.step += this.speed;\n    }\n\n\n    hit(damageTaken) {\n        if (this.hasArmor) {\n            this.armorHealth -= damageTaken;\n            this.armorWidth = this.armorHealth / this.baseArmorHealth * this.baseArmorWidth;\n            if (this.armorHealth <= 0) {\n                this.hasArmor = false;\n            }\n        } else {\n            this.health -= damageTaken;\n            this.radius = this.health / this.baseHealth * this.baseRadius;\n            if (this.radius <= 0) {\n                this.alive = false;\n            }\n        }\n    }\n}\n\n","import { drawTower, drawTowerRange } from \"../Draw\";\nimport {getDistance} from \"../utils\";\n\nexport default class AbstractTower {\n    x = 0;\n    y = 0;\n    radius = 15;\n    rangeRadius = 0;\n    color = '#fff';\n    damage = 0;\n    numTargets = 1\n    rank = 1;\n    detectCamo = false;\n    armorPiercing = false;\n    isSelected = false;\n\n    drawTower() {\n        drawTower(this);\n    }\n\n    drawTowerRange() {\n        drawTowerRange(this);\n    }\n\n    update(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    canHit(enemy) {\n        return getDistance(this.x, this.y, enemy.x, enemy.y) < this.rangeRadius && enemy.step >= 0;\n    }\n\n    hit(enemy) {\n        if (enemy.hasArmor) {\n            enemy.armorHealth -= this.damage *= this.armorPiercing ? 2 : 0.5;\n            enemy.armorWidth = enemy.armorWidth / enemy.baseArmorHealth * enemy.baseArmorWidth;\n            if (enemy.armorHealth <= 0) {\n                enemy.hasArmor = false;\n            }\n        } else {\n            enemy.health -= this.damage;\n            enemy.radius = enemy.health / enemy.baseHealth * enemy.baseRadius;\n            if (enemy.radius <= 0) {\n                enemy.alive = false;\n            }\n        }\n    }\n\n    getUpgradePrice(rank2Price, rank3Price) {\n        switch (this.rank) {\n            case 1:\n                return rank2Price;\n            case 2:\n                return rank3Price;\n            default:\n                return \"\";\n        }\n    }\n\n    getUpgradeText(rank2Upgrade, rank3Upgrade) {\n        switch (this.rank) {\n            case 1:\n                return rank2Upgrade;\n            case 2:\n                return rank3Upgrade;\n            default:\n                return \"Fully Upgraded\";\n        }\n        // switch (this.towerType) {\n        //     case 'BasicTower':\n        //         if (this.rank === 1) {\n        //             return \"Dual Wield\";\n        //         } else if (this.rank === 2) {\n        //             return \"Increase Attack\";\n        //         }\n        //         this.rank++;\n        //         break;\n        //     case 'SniperTower':\n        //         if (this.rank === 1) {\n        //             return \"Camo Detection\";\n        //         } else if (this.rank === 2) {\n        //             return \"Armor Piercing Rounds\";\n        //         }\n        //     default:\n        //         return 'Fully upgraded';\n        // }\n    }\n\n    upgrade() {\n        this.rank++;\n        // switch (this.towerType) {\n        //     case 'BasicTower':\n        //         if (this.rank === 1) {\n        //             this.numTargets++;\n        //         } else if (this.rank === 2) {\n        //             this.damage *= 2;\n        //         }\n        //         break;\n        //     case 'SniperTower':\n        //         if (this.rank === 1) {\n        //             this.detectCamo = true;\n        //         } else if (this.rank === 2) {\n        //             this.armorPiercing = true;\n        //         }\n        //         break;\n        //     default:\n        //         break;\n        // }\n        // this.rank++;\n    }\n}\n\n","import AbstractTower from \"./AbstractTower\";\n\nexport class Fng extends AbstractTower {\n    constructor(x, y) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.rangeRadius = 125;\n        this.color = '#964b00';\n        this.damage = 0.5;\n        this.price = 100;\n    }\n\n    canHit(enemy) {\n        return super.canHit(enemy) && (!enemy.camo || this.detectCamo);\n    }\n\n    // hit(enemy) {\n    //     if (enemy.hasArmor) {\n    //         enemy.armorHealth -= this.damage / 2;\n    //         enemy.armorWidth = enemy.armorWidth / enemy.baseArmorHealth * enemy.baseArmorWidth;\n    //         if (enemy.armorHealth <= 0) {\n    //             enemy.hasArmor = false;\n    //         }\n    //     } else {\n    //         enemy.health -= this.damage;\n    //         enemy.radius = enemy.health / enemy.baseHealth * enemy.baseRadius;\n    //         if (enemy.radius <= 0) {\n    //             enemy.alive = false;\n    //         }\n    //     }\n    // }\n\n    getUpgradePrice() {\n        return super.getUpgradePrice(69, 420);\n    }\n\n    getUpgradeText() {\n        return super.getUpgradeText(\"Dual Wield\", \"Camo Detection\");\n    }\n\n    upgrade() {\n        super.upgrade();\n        switch (this.rank) {\n            case 2:\n                this.numTargets = 2;\n                break;\n            case 3:\n                this.detectCamo = true;\n            default:\n                break;\n        }\n    }\n}","import AbstractTower from \"./AbstractTower\";\n\nexport class Gunsmith extends AbstractTower {\n    constructor(x, y) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.rangeRadius = 100;\n        this.numTargets = 5;\n        this.color = '#228b22';\n        this.damage = 0.25;\n        this.price = 150;\n    }\n\n    canHit(enemy) {\n        return super.canHit(enemy) && (!enemy.camo || this.detectCamo);\n    }\n\n    // hit(enemy) {\n    //     if (enemy.hasArmor) {\n    //         enemy.armorHealth -= this.damage *= this.armorPiercing ? 2 : 0.5;\n    //         enemy.armorWidth = enemy.armorWidth / enemy.baseArmorHealth * enemy.baseArmorWidth;\n    //         if (enemy.armorHealth <= 0) {\n    //             enemy.hasArmor = false;\n    //         }\n    //     } else {\n    //         enemy.health -= this.damage;\n    //         enemy.radius = enemy.health / enemy.baseHealth * enemy.baseRadius;\n    //         if (enemy.radius <= 0) {\n    //             enemy.alive = false;\n    //         }\n    //     }\n    // }\n\n    getUpgradePrice() {\n        return super.getUpgradePrice(690, 4200);\n    }\n\n    getUpgradeText() {\n        return super.getUpgradeText(\"Scatter Shot\", \"Armor Piercing Rounds\");\n    }\n\n    upgrade() {\n        super.upgrade();\n        switch (this.rank) {\n            case 2:\n                this.numTargets = 10;\n                break;\n            case 3:\n                this.armorPiercing = true;\n            default:\n                break;\n        }\n    }\n}","import AbstractTower from \"./AbstractTower\";\n\nexport class Marksman extends AbstractTower {\n    constructor(x, y) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.rangeRadius = 200;\n        this.color = '#00ff00';\n        this.damage = 0.2;\n        this.price = 250;\n    }\n\n    canHit(enemy) {\n        return super.canHit(enemy) && (!enemy.camo || this.detectCamo);\n    }\n\n    // hit(enemy) {\n        // if (enemy.hasArmor) {\n        //     enemy.armorHealth -= this.damage *= this.armorPiercing ? 2 : 0.5;\n        //     enemy.armorWidth = enemy.armorWidth / enemy.baseArmorHealth * enemy.baseArmorWidth;\n        //     if (enemy.armorHealth <= 0) {\n        //         enemy.hasArmor = false;\n        //     }\n        // } else {\n        //     enemy.health -= this.damage;\n        //     enemy.radius = enemy.health / enemy.baseHealth * enemy.baseRadius;\n        //     if (enemy.radius <= 0) {\n        //         enemy.alive = false;\n        //     }\n        // }\n    // }\n\n    getUpgradePrice() {\n        return super.getUpgradePrice(690, 4200);\n    }\n\n    getUpgradeText() {\n        return super.getUpgradeText(\"Camo Detection\", \"Armor Piercing Rounds\");\n    }\n\n    upgrade() {\n        super.upgrade();\n        switch (this.rank) {\n            case 2:\n                this.detectCamo = true;\n                break;\n            case 3:\n                this.armorPiercing = true;\n            default:\n                break;\n        }\n    }\n}","import { drawTower, drawTowerRange, drawTowerFull } from \"../Draw\";\n\nexport default class Tower {\n    constructor(towerType, x, y) {\n        this.towerType = towerType;\n        this.x = x\n        this.y = y\n        this.radius = 25;\n        this.rangeRadius = 25;\n        this.damage = 0;\n        this.numTargets = 1;\n        this.rank = 1;\n        this.detectCamo = false;\n        this.armorPiercing = false;\n        this.isSelected = false;\n        switch(towerType) {\n            case \"BasicTower\":\n                this.rangeRadius = 125;\n                this.color = '#964b00';\n                this.damage = 0.5;\n                this.price = 100;\n                break;\n            case \"SniperTower\":\n                this.rangeRadius = 300;\n                this.color = '#00ff00';\n                this.damage = 0.25;\n                this.price = 150;\n                break;\n            case \"SentryTower\":\n                this.rangeRadius = 75;\n                this.color = '#228b22';\n                this.damage = 0.25;\n                this.price = 100;\n                this.detectCamo = true;\n                break;\n            default:\n                this.rangeRadius = 0;\n                this.color = '#000';\n                this.damage = 0;\n                break;\n        }\n    }\n\n    drawTower() {\n        drawTower(this);\n    }\n\n    drawTowerRange() {\n        drawTowerRange(this);\n    }\n\n    update(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    getUpgradePrice() {\n        return this.rank * 50;\n    }\n\n    getUpgradeText() {\n        switch (this.towerType) {\n            case 'BasicTower':\n                if (this.rank === 1) {\n                    return \"Dual Wield\";\n                } else if (this.rank === 2) {\n                    return \"Increase Attack\";\n                }\n                this.rank++;\n                break;\n            case 'SniperTower':\n                if (this.rank === 1) {\n                    return \"Camo Detection\";\n                } else if (this.rank === 2) {\n                    return \"Armor Piercing Rounds\";\n                }\n            default:\n                return 'Fully upgraded';\n        }\n    }\n\n    upgrade() {\n        switch (this.towerType) {\n            case 'BasicTower':\n                if (this.rank === 1) {\n                    this.numTargets++;\n                } else if (this.rank === 2) {\n                    this.damage *= 2;\n                }\n                break;\n            case 'SniperTower':\n                if (this.rank === 1) {\n                    this.detectCamo = true;\n                } else if (this.rank === 2) {\n                    this.armorPiercing = true;\n                }\n                break;\n            default:\n                break;\n        }\n        this.rank++;\n    }\n}\n\n\n","export function randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport function randomColor(colors) {\n    return colors[Math.floor(Math.random() * colors.length)]\n}\n\nexport function getDistance(x1, y1, x2, y2) {\n    const xDist = x2 - x1\n    const yDist = y2 - y1\n    return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\n}\n"],"sourceRoot":""}